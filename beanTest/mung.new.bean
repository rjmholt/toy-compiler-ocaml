typedef {a : int, b : {f : bool, g : bool}} a_record
typedef {a : int, b : int, c : bool} my_record
typedef bool myBool

proc f(ref int x, val a_record y)
    int m;
    int n;
    int x;
    bool y;

    x := 2 + 1 - 1 * 1;
    x := -(5 - 2 - 1);
    x := --1;
    x := --1;
    x := 1 + 1 + 1;
    y := not not true;
    y := not not true;
    y := (true or false) and true;
    y := false and true or true;
    y := false and (true or true);
    y := (not true) != true;
    y := not true != true;
    y := (p <= q or p > q) and p < q;
    y := p <= q and p > q or p < q;
    write (1 - (2 - 3) + 4 - 3) * 2 * -1;
    x := 3 / (4 / 7);
    while 8 < 7 and not false do
        x := 3;
        x := 4;
        if x > 8 then
            x := 9;
            x := 10;
        fi
        y := 10;
    od
end

proc main()
    int k;
    a_record x;
    a_record y;

    write "Hello!\n";
    mung := 2 * mung + 42 * (3 + 7);
    while not (bean and false) do
        if true then
            mung := 39;
        else
            mung := 48;
        fi
    od
    read mung;
    m := {g = 12, duck = true};
    l := 3 < 4 / 2 and true;
    l := 3 < 2 and 2 < 3;
    f(x);
    x := -3;
    write "Kevin,\\ \\you \n\rdirty\n\r\t\t shill;:^``";
    read bean;
    bean := not (true or bean);
    mung := 6 * (3 * 2 + 4 * 5);
end
