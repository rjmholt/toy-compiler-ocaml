   0  $accept : %entry% $end

   1  program : typedefs procs

   2  typedefs : typedefs typedef
   3           |

   4  typedef : TYPEDEF typespec IDENT

   5  beantype : BOOL
   6           | INT

   7  definedtype : IDENT

   8  typespec : beantype
   9           | definedtype
  10           | LBRACE fields RBRACE

  11  fields : fields COMMA field
  12         | field

  13  field : IDENT COLON typespec

  14  procs : procs proc
  15        |

  16  proc : PROC IDENT LPAREN proc_params RPAREN proc_body END

  17  proc_params : proc_params COMMA proc_param
  18              | proc_param
  19              |

  20  proc_param : pass_type typespec IDENT

  21  pass_type : VAL
  22            | REF

  23  proc_body : decls stmts

  24  decls : decls decl
  25        |

  26  decl : typespec IDENT SEMICOLON

  27  stmts : stmts stmt
  28        | stmt

  29  stmt : stmt_body SEMICOLON
  30       | IF expr THEN stmts FI
  31       | IF expr THEN stmts ELSE stmts FI
  32       | WHILE expr DO stmts OD

  33  stmt_body : proc_call
  34            | READ lvalue
  35            | WRITE writeable
  36            | lvalue ASSIGN rvalue

  37  proc_call : IDENT LPAREN exprs RPAREN

  38  exprs : exprs COMMA expr
  39        | expr
  40        |

  41  rvalue : expr
  42         | struct_init

  43  struct_init : LBRACE struct_assigns RBRACE

  44  struct_assigns : struct_assigns COMMA struct_assign
  45                 | struct_assign

  46  struct_assign : IDENT EQ rvalue

  47  lvalue : IDENT DOT lvalue
  48         | IDENT

  49  expr : literal
  50       | lvalue
  51       | binop
  52       | unop
  53       | LPAREN expr RPAREN

  54  literal : BOOL_CONST
  55          | INT_CONST

  56  binop : expr PLUS expr
  57        | expr MINUS expr
  58        | expr MUL expr
  59        | expr DIV expr
  60        | expr AND expr
  61        | expr OR expr
  62        | expr EQ expr
  63        | expr NEQ expr
  64        | expr LT expr
  65        | expr LEQ expr
  66        | expr GT expr
  67        | expr GEQ expr

  68  unop : MINUS expr
  69       | NOT expr

  70  writeable : expr
  71            | STR_CONST

  72  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (72)
	typedefs : .  (3)

	.  reduce 3

	program  goto 3
	typedefs  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' program .  (72)

	.  reduce 72


state 4
	program : typedefs . procs  (1)
	typedefs : typedefs . typedef  (2)
	procs : .  (15)

	TYPEDEF  shift 5
	$end  reduce 15
	PROC  reduce 15

	procs  goto 6
	typedef  goto 7


state 5
	typedef : TYPEDEF . typespec IDENT  (4)

	IDENT  shift 8
	BOOL  shift 9
	INT  shift 10
	LBRACE  shift 11
	.  error

	typespec  goto 12
	beantype  goto 13
	definedtype  goto 14


state 6
	program : typedefs procs .  (1)
	procs : procs . proc  (14)

	PROC  shift 15
	$end  reduce 1

	proc  goto 16


state 7
	typedefs : typedefs typedef .  (2)

	.  reduce 2


state 8
	definedtype : IDENT .  (7)

	.  reduce 7


state 9
	beantype : BOOL .  (5)

	.  reduce 5


state 10
	beantype : INT .  (6)

	.  reduce 6


state 11
	typespec : LBRACE . fields RBRACE  (10)

	IDENT  shift 17
	.  error

	fields  goto 18
	field  goto 19


state 12
	typedef : TYPEDEF typespec . IDENT  (4)

	IDENT  shift 20
	.  error


state 13
	typespec : beantype .  (8)

	.  reduce 8


state 14
	typespec : definedtype .  (9)

	.  reduce 9


state 15
	proc : PROC . IDENT LPAREN proc_params RPAREN proc_body END  (16)

	IDENT  shift 21
	.  error


state 16
	procs : procs proc .  (14)

	.  reduce 14


state 17
	field : IDENT . COLON typespec  (13)

	COLON  shift 22
	.  error


state 18
	typespec : LBRACE fields . RBRACE  (10)
	fields : fields . COMMA field  (11)

	COMMA  shift 23
	RBRACE  shift 24
	.  error


state 19
	fields : field .  (12)

	.  reduce 12


state 20
	typedef : TYPEDEF typespec IDENT .  (4)

	.  reduce 4


state 21
	proc : PROC IDENT . LPAREN proc_params RPAREN proc_body END  (16)

	LPAREN  shift 25
	.  error


state 22
	field : IDENT COLON . typespec  (13)

	IDENT  shift 8
	BOOL  shift 9
	INT  shift 10
	LBRACE  shift 11
	.  error

	typespec  goto 26
	beantype  goto 13
	definedtype  goto 14


state 23
	fields : fields COMMA . field  (11)

	IDENT  shift 17
	.  error

	field  goto 27


state 24
	typespec : LBRACE fields RBRACE .  (10)

	.  reduce 10


state 25
	proc : PROC IDENT LPAREN . proc_params RPAREN proc_body END  (16)
	proc_params : .  (19)

	VAL  shift 28
	REF  shift 29
	COMMA  reduce 19
	RPAREN  reduce 19

	proc_params  goto 30
	proc_param  goto 31
	pass_type  goto 32


state 26
	field : IDENT COLON typespec .  (13)

	.  reduce 13


state 27
	fields : fields COMMA field .  (11)

	.  reduce 11


state 28
	pass_type : VAL .  (21)

	.  reduce 21


state 29
	pass_type : REF .  (22)

	.  reduce 22


state 30
	proc : PROC IDENT LPAREN proc_params . RPAREN proc_body END  (16)
	proc_params : proc_params . COMMA proc_param  (17)

	COMMA  shift 33
	RPAREN  shift 34
	.  error


state 31
	proc_params : proc_param .  (18)

	.  reduce 18


state 32
	proc_param : pass_type . typespec IDENT  (20)

	IDENT  shift 8
	BOOL  shift 9
	INT  shift 10
	LBRACE  shift 11
	.  error

	typespec  goto 35
	beantype  goto 13
	definedtype  goto 14


state 33
	proc_params : proc_params COMMA . proc_param  (17)

	VAL  shift 28
	REF  shift 29
	.  error

	proc_param  goto 36
	pass_type  goto 32


state 34
	proc : PROC IDENT LPAREN proc_params RPAREN . proc_body END  (16)
	decls : .  (25)

	.  reduce 25

	proc_body  goto 37
	decls  goto 38


state 35
	proc_param : pass_type typespec . IDENT  (20)

	IDENT  shift 39
	.  error


state 36
	proc_params : proc_params COMMA proc_param .  (17)

	.  reduce 17


state 37
	proc : PROC IDENT LPAREN proc_params RPAREN proc_body . END  (16)

	END  shift 40
	.  error


state 38
	proc_body : decls . stmts  (23)
	decls : decls . decl  (24)

	IDENT  shift 41
	BOOL  shift 9
	INT  shift 10
	WRITE  shift 42
	READ  shift 43
	IF  shift 44
	WHILE  shift 45
	LBRACE  shift 11
	.  error

	typespec  goto 46
	beantype  goto 13
	definedtype  goto 14
	stmts  goto 47
	decl  goto 48
	stmt  goto 49
	stmt_body  goto 50
	proc_call  goto 51
	lvalue  goto 52


state 39
	proc_param : pass_type typespec IDENT .  (20)

	.  reduce 20


state 40
	proc : PROC IDENT LPAREN proc_params RPAREN proc_body END .  (16)

	.  reduce 16


state 41
	definedtype : IDENT .  (7)
	proc_call : IDENT . LPAREN exprs RPAREN  (37)
	lvalue : IDENT . DOT lvalue  (47)
	lvalue : IDENT .  (48)

	DOT  shift 53
	LPAREN  shift 54
	IDENT  reduce 7
	ASSIGN  reduce 48


state 42
	stmt_body : WRITE . writeable  (35)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	STR_CONST  shift 57
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 62
	lvalue  goto 63
	writeable  goto 64
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 43
	stmt_body : READ . lvalue  (34)

	IDENT  shift 58
	.  error

	lvalue  goto 68


state 44
	stmt : IF . expr THEN stmts FI  (30)
	stmt : IF . expr THEN stmts ELSE stmts FI  (31)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 69
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 45
	stmt : WHILE . expr DO stmts OD  (32)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 70
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 46
	decl : typespec . IDENT SEMICOLON  (26)

	IDENT  shift 71
	.  error


state 47
	proc_body : decls stmts .  (23)
	stmts : stmts . stmt  (27)

	IDENT  shift 72
	WRITE  shift 42
	READ  shift 43
	IF  shift 44
	WHILE  shift 45
	END  reduce 23

	stmt  goto 73
	stmt_body  goto 50
	proc_call  goto 51
	lvalue  goto 52


state 48
	decls : decls decl .  (24)

	.  reduce 24


state 49
	stmts : stmt .  (28)

	.  reduce 28


state 50
	stmt : stmt_body . SEMICOLON  (29)

	SEMICOLON  shift 74
	.  error


state 51
	stmt_body : proc_call .  (33)

	.  reduce 33


state 52
	stmt_body : lvalue . ASSIGN rvalue  (36)

	ASSIGN  shift 75
	.  error


state 53
	lvalue : IDENT DOT . lvalue  (47)

	IDENT  shift 58
	.  error

	lvalue  goto 76


state 54
	proc_call : IDENT LPAREN . exprs RPAREN  (37)
	exprs : .  (40)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	COMMA  reduce 40
	RPAREN  reduce 40

	expr  goto 77
	lvalue  goto 63
	exprs  goto 78
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 55
	literal : BOOL_CONST .  (54)

	.  reduce 54


state 56
	literal : INT_CONST .  (55)

	.  reduce 55


state 57
	writeable : STR_CONST .  (71)

	.  reduce 71


state 58
	lvalue : IDENT . DOT lvalue  (47)
	lvalue : IDENT .  (48)

	DOT  shift 53
	ASSIGN  reduce 48
	THEN  reduce 48
	DO  reduce 48
	COMMA  reduce 48
	RPAREN  reduce 48
	RBRACE  reduce 48
	OR  reduce 48
	AND  reduce 48
	EQ  reduce 48
	NEQ  reduce 48
	LT  reduce 48
	LEQ  reduce 48
	GT  reduce 48
	GEQ  reduce 48
	PLUS  reduce 48
	MINUS  reduce 48
	MUL  reduce 48
	DIV  reduce 48
	SEMICOLON  reduce 48


state 59
	expr : LPAREN . expr RPAREN  (53)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 79
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 60
	unop : NOT . expr  (69)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 80
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 61
	unop : MINUS . expr  (68)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 81
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 62
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)
	writeable : expr .  (70)

	OR  shift 82
	AND  shift 83
	EQ  shift 84
	NEQ  shift 85
	LT  shift 86
	LEQ  shift 87
	GT  shift 88
	GEQ  shift 89
	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	SEMICOLON  reduce 70


state 63
	expr : lvalue .  (50)

	.  reduce 50


state 64
	stmt_body : WRITE writeable .  (35)

	.  reduce 35


state 65
	expr : literal .  (49)

	.  reduce 49


state 66
	expr : binop .  (51)

	.  reduce 51


state 67
	expr : unop .  (52)

	.  reduce 52


state 68
	stmt_body : READ lvalue .  (34)

	.  reduce 34


state 69
	stmt : IF expr . THEN stmts FI  (30)
	stmt : IF expr . THEN stmts ELSE stmts FI  (31)
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	THEN  shift 94
	OR  shift 82
	AND  shift 83
	EQ  shift 84
	NEQ  shift 85
	LT  shift 86
	LEQ  shift 87
	GT  shift 88
	GEQ  shift 89
	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	.  error


state 70
	stmt : WHILE expr . DO stmts OD  (32)
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	DO  shift 95
	OR  shift 82
	AND  shift 83
	EQ  shift 84
	NEQ  shift 85
	LT  shift 86
	LEQ  shift 87
	GT  shift 88
	GEQ  shift 89
	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	.  error


state 71
	decl : typespec IDENT . SEMICOLON  (26)

	SEMICOLON  shift 96
	.  error


state 72
	proc_call : IDENT . LPAREN exprs RPAREN  (37)
	lvalue : IDENT . DOT lvalue  (47)
	lvalue : IDENT .  (48)

	DOT  shift 53
	LPAREN  shift 54
	ASSIGN  reduce 48


state 73
	stmts : stmts stmt .  (27)

	.  reduce 27


state 74
	stmt : stmt_body SEMICOLON .  (29)

	.  reduce 29


state 75
	stmt_body : lvalue ASSIGN . rvalue  (36)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	LBRACE  shift 97
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 98
	lvalue  goto 63
	rvalue  goto 99
	struct_init  goto 100
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 76
	lvalue : IDENT DOT lvalue .  (47)

	.  reduce 47


state 77
	exprs : expr .  (39)
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	OR  shift 82
	AND  shift 83
	EQ  shift 84
	NEQ  shift 85
	LT  shift 86
	LEQ  shift 87
	GT  shift 88
	GEQ  shift 89
	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	COMMA  reduce 39
	RPAREN  reduce 39


state 78
	proc_call : IDENT LPAREN exprs . RPAREN  (37)
	exprs : exprs . COMMA expr  (38)

	COMMA  shift 101
	RPAREN  shift 102
	.  error


state 79
	expr : LPAREN expr . RPAREN  (53)
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	RPAREN  shift 103
	OR  shift 82
	AND  shift 83
	EQ  shift 84
	NEQ  shift 85
	LT  shift 86
	LEQ  shift 87
	GT  shift 88
	GEQ  shift 89
	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	.  error


state 80
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)
	unop : NOT expr .  (69)

	EQ  shift 84
	NEQ  shift 85
	LT  shift 86
	LEQ  shift 87
	GT  shift 88
	GEQ  shift 89
	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	THEN  reduce 69
	DO  reduce 69
	COMMA  reduce 69
	RPAREN  reduce 69
	RBRACE  reduce 69
	OR  reduce 69
	AND  reduce 69
	SEMICOLON  reduce 69


state 81
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)
	unop : MINUS expr .  (68)

	.  reduce 68


state 82
	binop : expr OR . expr  (61)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 104
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 83
	binop : expr AND . expr  (60)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 105
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 84
	binop : expr EQ . expr  (62)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 106
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 85
	binop : expr NEQ . expr  (63)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 107
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 86
	binop : expr LT . expr  (64)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 108
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 87
	binop : expr LEQ . expr  (65)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 109
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 88
	binop : expr GT . expr  (66)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 110
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 89
	binop : expr GEQ . expr  (67)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 111
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 90
	binop : expr PLUS . expr  (56)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 112
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 91
	binop : expr MINUS . expr  (57)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 113
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 92
	binop : expr MUL . expr  (58)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 114
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 93
	binop : expr DIV . expr  (59)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 115
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 94
	stmt : IF expr THEN . stmts FI  (30)
	stmt : IF expr THEN . stmts ELSE stmts FI  (31)

	IDENT  shift 72
	WRITE  shift 42
	READ  shift 43
	IF  shift 44
	WHILE  shift 45
	.  error

	stmts  goto 116
	stmt  goto 49
	stmt_body  goto 50
	proc_call  goto 51
	lvalue  goto 52


state 95
	stmt : WHILE expr DO . stmts OD  (32)

	IDENT  shift 72
	WRITE  shift 42
	READ  shift 43
	IF  shift 44
	WHILE  shift 45
	.  error

	stmts  goto 117
	stmt  goto 49
	stmt_body  goto 50
	proc_call  goto 51
	lvalue  goto 52


state 96
	decl : typespec IDENT SEMICOLON .  (26)

	.  reduce 26


state 97
	struct_init : LBRACE . struct_assigns RBRACE  (43)

	IDENT  shift 118
	.  error

	struct_assigns  goto 119
	struct_assign  goto 120


state 98
	rvalue : expr .  (41)
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	OR  shift 82
	AND  shift 83
	EQ  shift 84
	NEQ  shift 85
	LT  shift 86
	LEQ  shift 87
	GT  shift 88
	GEQ  shift 89
	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	COMMA  reduce 41
	RBRACE  reduce 41
	SEMICOLON  reduce 41


state 99
	stmt_body : lvalue ASSIGN rvalue .  (36)

	.  reduce 36


state 100
	rvalue : struct_init .  (42)

	.  reduce 42


state 101
	exprs : exprs COMMA . expr  (38)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 121
	lvalue  goto 63
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 102
	proc_call : IDENT LPAREN exprs RPAREN .  (37)

	.  reduce 37


state 103
	expr : LPAREN expr RPAREN .  (53)

	.  reduce 53


state 104
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr OR expr .  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	AND  shift 83
	EQ  shift 84
	NEQ  shift 85
	LT  shift 86
	LEQ  shift 87
	GT  shift 88
	GEQ  shift 89
	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	THEN  reduce 61
	DO  reduce 61
	COMMA  reduce 61
	RPAREN  reduce 61
	RBRACE  reduce 61
	OR  reduce 61
	SEMICOLON  reduce 61


state 105
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr AND expr .  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	EQ  shift 84
	NEQ  shift 85
	LT  shift 86
	LEQ  shift 87
	GT  shift 88
	GEQ  shift 89
	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	THEN  reduce 60
	DO  reduce 60
	COMMA  reduce 60
	RPAREN  reduce 60
	RBRACE  reduce 60
	OR  reduce 60
	AND  reduce 60
	SEMICOLON  reduce 60


state 106
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr EQ expr .  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	THEN  reduce 62
	DO  reduce 62
	COMMA  reduce 62
	RPAREN  reduce 62
	RBRACE  reduce 62
	OR  reduce 62
	AND  reduce 62
	SEMICOLON  reduce 62


state 107
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr NEQ expr .  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	THEN  reduce 63
	DO  reduce 63
	COMMA  reduce 63
	RPAREN  reduce 63
	RBRACE  reduce 63
	OR  reduce 63
	AND  reduce 63
	SEMICOLON  reduce 63


state 108
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr LT expr .  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	THEN  reduce 64
	DO  reduce 64
	COMMA  reduce 64
	RPAREN  reduce 64
	RBRACE  reduce 64
	OR  reduce 64
	AND  reduce 64
	SEMICOLON  reduce 64


state 109
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr LEQ expr .  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	THEN  reduce 65
	DO  reduce 65
	COMMA  reduce 65
	RPAREN  reduce 65
	RBRACE  reduce 65
	OR  reduce 65
	AND  reduce 65
	SEMICOLON  reduce 65


state 110
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr GT expr .  (66)
	binop : expr . GEQ expr  (67)

	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	THEN  reduce 66
	DO  reduce 66
	COMMA  reduce 66
	RPAREN  reduce 66
	RBRACE  reduce 66
	OR  reduce 66
	AND  reduce 66
	SEMICOLON  reduce 66


state 111
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)
	binop : expr GEQ expr .  (67)

	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	THEN  reduce 67
	DO  reduce 67
	COMMA  reduce 67
	RPAREN  reduce 67
	RBRACE  reduce 67
	OR  reduce 67
	AND  reduce 67
	SEMICOLON  reduce 67


state 112
	binop : expr . PLUS expr  (56)
	binop : expr PLUS expr .  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	MUL  shift 92
	DIV  shift 93
	THEN  reduce 56
	DO  reduce 56
	COMMA  reduce 56
	RPAREN  reduce 56
	RBRACE  reduce 56
	OR  reduce 56
	AND  reduce 56
	EQ  reduce 56
	NEQ  reduce 56
	LT  reduce 56
	LEQ  reduce 56
	GT  reduce 56
	GEQ  reduce 56
	PLUS  reduce 56
	MINUS  reduce 56
	SEMICOLON  reduce 56


state 113
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr MINUS expr .  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	MUL  shift 92
	DIV  shift 93
	THEN  reduce 57
	DO  reduce 57
	COMMA  reduce 57
	RPAREN  reduce 57
	RBRACE  reduce 57
	OR  reduce 57
	AND  reduce 57
	EQ  reduce 57
	NEQ  reduce 57
	LT  reduce 57
	LEQ  reduce 57
	GT  reduce 57
	GEQ  reduce 57
	PLUS  reduce 57
	MINUS  reduce 57
	SEMICOLON  reduce 57


state 114
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr MUL expr .  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	.  reduce 58


state 115
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr DIV expr .  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	.  reduce 59


state 116
	stmts : stmts . stmt  (27)
	stmt : IF expr THEN stmts . FI  (30)
	stmt : IF expr THEN stmts . ELSE stmts FI  (31)

	IDENT  shift 72
	WRITE  shift 42
	READ  shift 43
	IF  shift 44
	ELSE  shift 122
	FI  shift 123
	WHILE  shift 45
	.  error

	stmt  goto 73
	stmt_body  goto 50
	proc_call  goto 51
	lvalue  goto 52


state 117
	stmts : stmts . stmt  (27)
	stmt : WHILE expr DO stmts . OD  (32)

	IDENT  shift 72
	WRITE  shift 42
	READ  shift 43
	IF  shift 44
	WHILE  shift 45
	OD  shift 124
	.  error

	stmt  goto 73
	stmt_body  goto 50
	proc_call  goto 51
	lvalue  goto 52


state 118
	struct_assign : IDENT . EQ rvalue  (46)

	EQ  shift 125
	.  error


state 119
	struct_init : LBRACE struct_assigns . RBRACE  (43)
	struct_assigns : struct_assigns . COMMA struct_assign  (44)

	COMMA  shift 126
	RBRACE  shift 127
	.  error


state 120
	struct_assigns : struct_assign .  (45)

	.  reduce 45


state 121
	exprs : exprs COMMA expr .  (38)
	binop : expr . PLUS expr  (56)
	binop : expr . MINUS expr  (57)
	binop : expr . MUL expr  (58)
	binop : expr . DIV expr  (59)
	binop : expr . AND expr  (60)
	binop : expr . OR expr  (61)
	binop : expr . EQ expr  (62)
	binop : expr . NEQ expr  (63)
	binop : expr . LT expr  (64)
	binop : expr . LEQ expr  (65)
	binop : expr . GT expr  (66)
	binop : expr . GEQ expr  (67)

	OR  shift 82
	AND  shift 83
	EQ  shift 84
	NEQ  shift 85
	LT  shift 86
	LEQ  shift 87
	GT  shift 88
	GEQ  shift 89
	PLUS  shift 90
	MINUS  shift 91
	MUL  shift 92
	DIV  shift 93
	COMMA  reduce 38
	RPAREN  reduce 38


state 122
	stmt : IF expr THEN stmts ELSE . stmts FI  (31)

	IDENT  shift 72
	WRITE  shift 42
	READ  shift 43
	IF  shift 44
	WHILE  shift 45
	.  error

	stmts  goto 128
	stmt  goto 49
	stmt_body  goto 50
	proc_call  goto 51
	lvalue  goto 52


state 123
	stmt : IF expr THEN stmts FI .  (30)

	.  reduce 30


state 124
	stmt : WHILE expr DO stmts OD .  (32)

	.  reduce 32


state 125
	struct_assign : IDENT EQ . rvalue  (46)

	BOOL_CONST  shift 55
	INT_CONST  shift 56
	IDENT  shift 58
	LPAREN  shift 59
	LBRACE  shift 97
	NOT  shift 60
	MINUS  shift 61
	.  error

	expr  goto 98
	lvalue  goto 63
	rvalue  goto 129
	struct_init  goto 100
	literal  goto 65
	binop  goto 66
	unop  goto 67


state 126
	struct_assigns : struct_assigns COMMA . struct_assign  (44)

	IDENT  shift 118
	.  error

	struct_assign  goto 130


state 127
	struct_init : LBRACE struct_assigns RBRACE .  (43)

	.  reduce 43


state 128
	stmts : stmts . stmt  (27)
	stmt : IF expr THEN stmts ELSE stmts . FI  (31)

	IDENT  shift 72
	WRITE  shift 42
	READ  shift 43
	IF  shift 44
	FI  shift 131
	WHILE  shift 45
	.  error

	stmt  goto 73
	stmt_body  goto 50
	proc_call  goto 51
	lvalue  goto 52


state 129
	struct_assign : IDENT EQ rvalue .  (46)

	.  reduce 46


state 130
	struct_assigns : struct_assigns COMMA struct_assign .  (44)

	.  reduce 44


state 131
	stmt : IF expr THEN stmts ELSE stmts FI .  (31)

	.  reduce 31


48 terminals, 33 nonterminals
73 grammar rules, 132 states
