   0  $accept : %entry% $end

   1  program : typedefs procs

   2  typedefs : typedefs typedef
   3           |

   4  beantype : BOOL
   5           | INT

   6  definedtype : IDENT

   7  typedef : TYPEDEF typespec IDENT

   8  typespec : beantype
   9           | definedtype
  10           | LBRACE fields RBRACE

  11  fields : fields COMMA field
  12         | field

  13  field : IDENT COLON typespec

  14  procs : procs proc
  15        |

  16  proc : PROC IDENT LPAREN proc_params RPAREN decls stmts END

  17  proc_params : proc_params COMMA proc_param
  18              | proc_param
  19              |

  20  proc_param : pass_type typespec IDENT

  21  pass_type : VAL
  22            | REF

  23  decls : decls decl
  24        |

  25  decl : typespec IDENT SEMICOLON

  26  stmts : stmt stmts
  27        | stmt

  28  stmt : stmt_body SEMICOLON
  29       | IF expr THEN stmts FI
  30       | IF expr THEN stmts ELSE stmts FI
  31       | WHILE expr DO stmts OD

  32  stmt_body : proc_call
  33            | READ lvalue
  34            | WRITE writeable
  35            | lvalue ASSIGN rvalue

  36  proc_call : IDENT LPAREN exprs RPAREN

  37  exprs : exprs COMMA expr
  38        | expr
  39        |

  40  rvalue : expr
  41         | struct_init

  42  lvalue : IDENT DOT lvalue
  43         | IDENT

  44  struct_init : LBRACE struct_assigns RBRACE

  45  struct_assigns : struct_assigns COMMA struct_assign
  46                 | struct_assign

  47  struct_assign : IDENT EQ rvalue

  48  expr : literal
  49       | lvalue
  50       | binop
  51       | unop
  52       | LPAREN expr RPAREN

  53  literal : BOOL_CONST
  54          | INT_CONST

  55  binop : expr PLUS expr
  56        | expr MINUS expr
  57        | expr MUL expr
  58        | expr DIV expr
  59        | expr AND expr
  60        | expr OR expr
  61        | expr EQ expr
  62        | expr NEQ expr
  63        | expr LT expr
  64        | expr LEQ expr
  65        | expr GT expr
  66        | expr GEQ expr

  67  unop : MINUS expr
  68       | NOT expr

  69  writeable : expr
  70            | STR_CONST

  71  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (71)
	typedefs : .  (3)

	.  reduce 3

	program  goto 3
	typedefs  goto 4


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	%entry% : '\001' program .  (71)

	.  reduce 71


state 4
	program : typedefs . procs  (1)
	typedefs : typedefs . typedef  (2)
	procs : .  (15)

	TYPEDEF  shift 5
	$end  reduce 15
	PROC  reduce 15

	procs  goto 6
	typedef  goto 7


state 5
	typedef : TYPEDEF . typespec IDENT  (7)

	IDENT  shift 8
	BOOL  shift 9
	INT  shift 10
	LBRACE  shift 11
	.  error

	beantype  goto 12
	definedtype  goto 13
	typespec  goto 14


state 6
	program : typedefs procs .  (1)
	procs : procs . proc  (14)

	PROC  shift 15
	$end  reduce 1

	proc  goto 16


state 7
	typedefs : typedefs typedef .  (2)

	.  reduce 2


state 8
	definedtype : IDENT .  (6)

	.  reduce 6


state 9
	beantype : BOOL .  (4)

	.  reduce 4


state 10
	beantype : INT .  (5)

	.  reduce 5


state 11
	typespec : LBRACE . fields RBRACE  (10)

	IDENT  shift 17
	.  error

	fields  goto 18
	field  goto 19


state 12
	typespec : beantype .  (8)

	.  reduce 8


state 13
	typespec : definedtype .  (9)

	.  reduce 9


state 14
	typedef : TYPEDEF typespec . IDENT  (7)

	IDENT  shift 20
	.  error


state 15
	proc : PROC . IDENT LPAREN proc_params RPAREN decls stmts END  (16)

	IDENT  shift 21
	.  error


state 16
	procs : procs proc .  (14)

	.  reduce 14


state 17
	field : IDENT . COLON typespec  (13)

	COLON  shift 22
	.  error


state 18
	typespec : LBRACE fields . RBRACE  (10)
	fields : fields . COMMA field  (11)

	COMMA  shift 23
	RBRACE  shift 24
	.  error


state 19
	fields : field .  (12)

	.  reduce 12


state 20
	typedef : TYPEDEF typespec IDENT .  (7)

	.  reduce 7


state 21
	proc : PROC IDENT . LPAREN proc_params RPAREN decls stmts END  (16)

	LPAREN  shift 25
	.  error


state 22
	field : IDENT COLON . typespec  (13)

	IDENT  shift 8
	BOOL  shift 9
	INT  shift 10
	LBRACE  shift 11
	.  error

	beantype  goto 12
	definedtype  goto 13
	typespec  goto 26


state 23
	fields : fields COMMA . field  (11)

	IDENT  shift 17
	.  error

	field  goto 27


state 24
	typespec : LBRACE fields RBRACE .  (10)

	.  reduce 10


state 25
	proc : PROC IDENT LPAREN . proc_params RPAREN decls stmts END  (16)
	proc_params : .  (19)

	VAL  shift 28
	REF  shift 29
	COMMA  reduce 19
	RPAREN  reduce 19

	proc_params  goto 30
	proc_param  goto 31
	pass_type  goto 32


state 26
	field : IDENT COLON typespec .  (13)

	.  reduce 13


state 27
	fields : fields COMMA field .  (11)

	.  reduce 11


state 28
	pass_type : VAL .  (21)

	.  reduce 21


state 29
	pass_type : REF .  (22)

	.  reduce 22


state 30
	proc : PROC IDENT LPAREN proc_params . RPAREN decls stmts END  (16)
	proc_params : proc_params . COMMA proc_param  (17)

	COMMA  shift 33
	RPAREN  shift 34
	.  error


state 31
	proc_params : proc_param .  (18)

	.  reduce 18


state 32
	proc_param : pass_type . typespec IDENT  (20)

	IDENT  shift 8
	BOOL  shift 9
	INT  shift 10
	LBRACE  shift 11
	.  error

	beantype  goto 12
	definedtype  goto 13
	typespec  goto 35


state 33
	proc_params : proc_params COMMA . proc_param  (17)

	VAL  shift 28
	REF  shift 29
	.  error

	proc_param  goto 36
	pass_type  goto 32


state 34
	proc : PROC IDENT LPAREN proc_params RPAREN . decls stmts END  (16)
	decls : .  (24)

	.  reduce 24

	decls  goto 37


state 35
	proc_param : pass_type typespec . IDENT  (20)

	IDENT  shift 38
	.  error


state 36
	proc_params : proc_params COMMA proc_param .  (17)

	.  reduce 17


state 37
	proc : PROC IDENT LPAREN proc_params RPAREN decls . stmts END  (16)
	decls : decls . decl  (23)

	IDENT  shift 39
	BOOL  shift 9
	INT  shift 10
	WRITE  shift 40
	READ  shift 41
	IF  shift 42
	WHILE  shift 43
	LBRACE  shift 11
	.  error

	beantype  goto 12
	definedtype  goto 13
	typespec  goto 44
	stmts  goto 45
	decl  goto 46
	stmt  goto 47
	stmt_body  goto 48
	proc_call  goto 49
	lvalue  goto 50


state 38
	proc_param : pass_type typespec IDENT .  (20)

	.  reduce 20


state 39
	definedtype : IDENT .  (6)
	proc_call : IDENT . LPAREN exprs RPAREN  (36)
	lvalue : IDENT . DOT lvalue  (42)
	lvalue : IDENT .  (43)

	DOT  shift 51
	LPAREN  shift 52
	IDENT  reduce 6
	ASSIGN  reduce 43


state 40
	stmt_body : WRITE . writeable  (34)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	STR_CONST  shift 55
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 60
	lvalue  goto 61
	writeable  goto 62
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 41
	stmt_body : READ . lvalue  (33)

	IDENT  shift 56
	.  error

	lvalue  goto 66


state 42
	stmt : IF . expr THEN stmts FI  (29)
	stmt : IF . expr THEN stmts ELSE stmts FI  (30)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 67
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 43
	stmt : WHILE . expr DO stmts OD  (31)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 68
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 44
	decl : typespec . IDENT SEMICOLON  (25)

	IDENT  shift 69
	.  error


state 45
	proc : PROC IDENT LPAREN proc_params RPAREN decls stmts . END  (16)

	END  shift 70
	.  error


state 46
	decls : decls decl .  (23)

	.  reduce 23


state 47
	stmts : stmt . stmts  (26)
	stmts : stmt .  (27)

	IDENT  shift 71
	WRITE  shift 40
	READ  shift 41
	IF  shift 42
	WHILE  shift 43
	ELSE  reduce 27
	FI  reduce 27
	OD  reduce 27
	END  reduce 27

	stmts  goto 72
	stmt  goto 47
	stmt_body  goto 48
	proc_call  goto 49
	lvalue  goto 50


state 48
	stmt : stmt_body . SEMICOLON  (28)

	SEMICOLON  shift 73
	.  error


state 49
	stmt_body : proc_call .  (32)

	.  reduce 32


state 50
	stmt_body : lvalue . ASSIGN rvalue  (35)

	ASSIGN  shift 74
	.  error


state 51
	lvalue : IDENT DOT . lvalue  (42)

	IDENT  shift 56
	.  error

	lvalue  goto 75


state 52
	proc_call : IDENT LPAREN . exprs RPAREN  (36)
	exprs : .  (39)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	COMMA  reduce 39
	RPAREN  reduce 39

	expr  goto 76
	lvalue  goto 61
	exprs  goto 77
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 53
	literal : BOOL_CONST .  (53)

	.  reduce 53


state 54
	literal : INT_CONST .  (54)

	.  reduce 54


state 55
	writeable : STR_CONST .  (70)

	.  reduce 70


state 56
	lvalue : IDENT . DOT lvalue  (42)
	lvalue : IDENT .  (43)

	DOT  shift 51
	ASSIGN  reduce 43
	THEN  reduce 43
	DO  reduce 43
	COMMA  reduce 43
	RPAREN  reduce 43
	RBRACE  reduce 43
	EQ  reduce 43
	NEQ  reduce 43
	LT  reduce 43
	LEQ  reduce 43
	GT  reduce 43
	GEQ  reduce 43
	AND  reduce 43
	OR  reduce 43
	PLUS  reduce 43
	MINUS  reduce 43
	MUL  reduce 43
	DIV  reduce 43
	SEMICOLON  reduce 43


state 57
	expr : LPAREN . expr RPAREN  (52)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 78
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 58
	unop : NOT . expr  (68)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 79
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 59
	unop : MINUS . expr  (67)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 80
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 60
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)
	writeable : expr .  (69)

	EQ  shift 81
	NEQ  shift 82
	LT  shift 83
	LEQ  shift 84
	GT  shift 85
	GEQ  shift 86
	AND  shift 87
	OR  shift 88
	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	SEMICOLON  reduce 69


state 61
	expr : lvalue .  (49)

	.  reduce 49


state 62
	stmt_body : WRITE writeable .  (34)

	.  reduce 34


state 63
	expr : literal .  (48)

	.  reduce 48


state 64
	expr : binop .  (50)

	.  reduce 50


state 65
	expr : unop .  (51)

	.  reduce 51


state 66
	stmt_body : READ lvalue .  (33)

	.  reduce 33


state 67
	stmt : IF expr . THEN stmts FI  (29)
	stmt : IF expr . THEN stmts ELSE stmts FI  (30)
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	THEN  shift 93
	EQ  shift 81
	NEQ  shift 82
	LT  shift 83
	LEQ  shift 84
	GT  shift 85
	GEQ  shift 86
	AND  shift 87
	OR  shift 88
	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	.  error


state 68
	stmt : WHILE expr . DO stmts OD  (31)
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	DO  shift 94
	EQ  shift 81
	NEQ  shift 82
	LT  shift 83
	LEQ  shift 84
	GT  shift 85
	GEQ  shift 86
	AND  shift 87
	OR  shift 88
	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	.  error


state 69
	decl : typespec IDENT . SEMICOLON  (25)

	SEMICOLON  shift 95
	.  error


state 70
	proc : PROC IDENT LPAREN proc_params RPAREN decls stmts END .  (16)

	.  reduce 16


state 71
	proc_call : IDENT . LPAREN exprs RPAREN  (36)
	lvalue : IDENT . DOT lvalue  (42)
	lvalue : IDENT .  (43)

	DOT  shift 51
	LPAREN  shift 52
	ASSIGN  reduce 43


state 72
	stmts : stmt stmts .  (26)

	.  reduce 26


state 73
	stmt : stmt_body SEMICOLON .  (28)

	.  reduce 28


state 74
	stmt_body : lvalue ASSIGN . rvalue  (35)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	LBRACE  shift 96
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 97
	lvalue  goto 61
	rvalue  goto 98
	struct_init  goto 99
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 75
	lvalue : IDENT DOT lvalue .  (42)

	.  reduce 42


state 76
	exprs : expr .  (38)
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	EQ  shift 81
	NEQ  shift 82
	LT  shift 83
	LEQ  shift 84
	GT  shift 85
	GEQ  shift 86
	AND  shift 87
	OR  shift 88
	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	COMMA  reduce 38
	RPAREN  reduce 38


state 77
	proc_call : IDENT LPAREN exprs . RPAREN  (36)
	exprs : exprs . COMMA expr  (37)

	COMMA  shift 100
	RPAREN  shift 101
	.  error


state 78
	expr : LPAREN expr . RPAREN  (52)
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	RPAREN  shift 102
	EQ  shift 81
	NEQ  shift 82
	LT  shift 83
	LEQ  shift 84
	GT  shift 85
	GEQ  shift 86
	AND  shift 87
	OR  shift 88
	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	.  error


state 79
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)
	unop : NOT expr .  (68)

	.  reduce 68


state 80
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)
	unop : MINUS expr .  (67)

	.  reduce 67


state 81
	binop : expr EQ . expr  (61)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 103
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 82
	binop : expr NEQ . expr  (62)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 104
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 83
	binop : expr LT . expr  (63)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 105
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 84
	binop : expr LEQ . expr  (64)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 106
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 85
	binop : expr GT . expr  (65)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 107
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 86
	binop : expr GEQ . expr  (66)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 108
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 87
	binop : expr AND . expr  (59)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 109
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 88
	binop : expr OR . expr  (60)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 110
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 89
	binop : expr PLUS . expr  (55)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 111
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 90
	binop : expr MINUS . expr  (56)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 112
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 91
	binop : expr MUL . expr  (57)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 113
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 92
	binop : expr DIV . expr  (58)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 114
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 93
	stmt : IF expr THEN . stmts FI  (29)
	stmt : IF expr THEN . stmts ELSE stmts FI  (30)

	IDENT  shift 71
	WRITE  shift 40
	READ  shift 41
	IF  shift 42
	WHILE  shift 43
	.  error

	stmts  goto 115
	stmt  goto 47
	stmt_body  goto 48
	proc_call  goto 49
	lvalue  goto 50


state 94
	stmt : WHILE expr DO . stmts OD  (31)

	IDENT  shift 71
	WRITE  shift 40
	READ  shift 41
	IF  shift 42
	WHILE  shift 43
	.  error

	stmts  goto 116
	stmt  goto 47
	stmt_body  goto 48
	proc_call  goto 49
	lvalue  goto 50


state 95
	decl : typespec IDENT SEMICOLON .  (25)

	.  reduce 25


state 96
	struct_init : LBRACE . struct_assigns RBRACE  (44)

	IDENT  shift 117
	.  error

	struct_assigns  goto 118
	struct_assign  goto 119


state 97
	rvalue : expr .  (40)
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	EQ  shift 81
	NEQ  shift 82
	LT  shift 83
	LEQ  shift 84
	GT  shift 85
	GEQ  shift 86
	AND  shift 87
	OR  shift 88
	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	COMMA  reduce 40
	RBRACE  reduce 40
	SEMICOLON  reduce 40


state 98
	stmt_body : lvalue ASSIGN rvalue .  (35)

	.  reduce 35


state 99
	rvalue : struct_init .  (41)

	.  reduce 41


state 100
	exprs : exprs COMMA . expr  (37)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 120
	lvalue  goto 61
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 101
	proc_call : IDENT LPAREN exprs RPAREN .  (36)

	.  reduce 36


state 102
	expr : LPAREN expr RPAREN .  (52)

	.  reduce 52


state 103
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr EQ expr .  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	THEN  reduce 61
	DO  reduce 61
	COMMA  reduce 61
	RPAREN  reduce 61
	RBRACE  reduce 61
	AND  reduce 61
	OR  reduce 61
	SEMICOLON  reduce 61


state 104
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr NEQ expr .  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	THEN  reduce 62
	DO  reduce 62
	COMMA  reduce 62
	RPAREN  reduce 62
	RBRACE  reduce 62
	AND  reduce 62
	OR  reduce 62
	SEMICOLON  reduce 62


state 105
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr LT expr .  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	THEN  reduce 63
	DO  reduce 63
	COMMA  reduce 63
	RPAREN  reduce 63
	RBRACE  reduce 63
	AND  reduce 63
	OR  reduce 63
	SEMICOLON  reduce 63


state 106
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr LEQ expr .  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	THEN  reduce 64
	DO  reduce 64
	COMMA  reduce 64
	RPAREN  reduce 64
	RBRACE  reduce 64
	AND  reduce 64
	OR  reduce 64
	SEMICOLON  reduce 64


state 107
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr GT expr .  (65)
	binop : expr . GEQ expr  (66)

	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	THEN  reduce 65
	DO  reduce 65
	COMMA  reduce 65
	RPAREN  reduce 65
	RBRACE  reduce 65
	AND  reduce 65
	OR  reduce 65
	SEMICOLON  reduce 65


state 108
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)
	binop : expr GEQ expr .  (66)

	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	THEN  reduce 66
	DO  reduce 66
	COMMA  reduce 66
	RPAREN  reduce 66
	RBRACE  reduce 66
	AND  reduce 66
	OR  reduce 66
	SEMICOLON  reduce 66


state 109
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr AND expr .  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	EQ  shift 81
	NEQ  shift 82
	LT  shift 83
	LEQ  shift 84
	GT  shift 85
	GEQ  shift 86
	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	THEN  reduce 59
	DO  reduce 59
	COMMA  reduce 59
	RPAREN  reduce 59
	RBRACE  reduce 59
	AND  reduce 59
	OR  reduce 59
	SEMICOLON  reduce 59


state 110
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr OR expr .  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	EQ  shift 81
	NEQ  shift 82
	LT  shift 83
	LEQ  shift 84
	GT  shift 85
	GEQ  shift 86
	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	THEN  reduce 60
	DO  reduce 60
	COMMA  reduce 60
	RPAREN  reduce 60
	RBRACE  reduce 60
	AND  reduce 60
	OR  reduce 60
	SEMICOLON  reduce 60


state 111
	binop : expr . PLUS expr  (55)
	binop : expr PLUS expr .  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	MUL  shift 91
	DIV  shift 92
	THEN  reduce 55
	DO  reduce 55
	COMMA  reduce 55
	RPAREN  reduce 55
	RBRACE  reduce 55
	EQ  reduce 55
	NEQ  reduce 55
	LT  reduce 55
	LEQ  reduce 55
	GT  reduce 55
	GEQ  reduce 55
	AND  reduce 55
	OR  reduce 55
	PLUS  reduce 55
	MINUS  reduce 55
	SEMICOLON  reduce 55


state 112
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr MINUS expr .  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	MUL  shift 91
	DIV  shift 92
	THEN  reduce 56
	DO  reduce 56
	COMMA  reduce 56
	RPAREN  reduce 56
	RBRACE  reduce 56
	EQ  reduce 56
	NEQ  reduce 56
	LT  reduce 56
	LEQ  reduce 56
	GT  reduce 56
	GEQ  reduce 56
	AND  reduce 56
	OR  reduce 56
	PLUS  reduce 56
	MINUS  reduce 56
	SEMICOLON  reduce 56


state 113
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr MUL expr .  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	.  reduce 57


state 114
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr DIV expr .  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	.  reduce 58


state 115
	stmt : IF expr THEN stmts . FI  (29)
	stmt : IF expr THEN stmts . ELSE stmts FI  (30)

	ELSE  shift 121
	FI  shift 122
	.  error


state 116
	stmt : WHILE expr DO stmts . OD  (31)

	OD  shift 123
	.  error


state 117
	struct_assign : IDENT . EQ rvalue  (47)

	EQ  shift 124
	.  error


state 118
	struct_init : LBRACE struct_assigns . RBRACE  (44)
	struct_assigns : struct_assigns . COMMA struct_assign  (45)

	COMMA  shift 125
	RBRACE  shift 126
	.  error


state 119
	struct_assigns : struct_assign .  (46)

	.  reduce 46


state 120
	exprs : exprs COMMA expr .  (37)
	binop : expr . PLUS expr  (55)
	binop : expr . MINUS expr  (56)
	binop : expr . MUL expr  (57)
	binop : expr . DIV expr  (58)
	binop : expr . AND expr  (59)
	binop : expr . OR expr  (60)
	binop : expr . EQ expr  (61)
	binop : expr . NEQ expr  (62)
	binop : expr . LT expr  (63)
	binop : expr . LEQ expr  (64)
	binop : expr . GT expr  (65)
	binop : expr . GEQ expr  (66)

	EQ  shift 81
	NEQ  shift 82
	LT  shift 83
	LEQ  shift 84
	GT  shift 85
	GEQ  shift 86
	AND  shift 87
	OR  shift 88
	PLUS  shift 89
	MINUS  shift 90
	MUL  shift 91
	DIV  shift 92
	COMMA  reduce 37
	RPAREN  reduce 37


state 121
	stmt : IF expr THEN stmts ELSE . stmts FI  (30)

	IDENT  shift 71
	WRITE  shift 40
	READ  shift 41
	IF  shift 42
	WHILE  shift 43
	.  error

	stmts  goto 127
	stmt  goto 47
	stmt_body  goto 48
	proc_call  goto 49
	lvalue  goto 50


state 122
	stmt : IF expr THEN stmts FI .  (29)

	.  reduce 29


state 123
	stmt : WHILE expr DO stmts OD .  (31)

	.  reduce 31


state 124
	struct_assign : IDENT EQ . rvalue  (47)

	BOOL_CONST  shift 53
	INT_CONST  shift 54
	IDENT  shift 56
	LPAREN  shift 57
	LBRACE  shift 96
	NOT  shift 58
	MINUS  shift 59
	.  error

	expr  goto 97
	lvalue  goto 61
	rvalue  goto 128
	struct_init  goto 99
	literal  goto 63
	binop  goto 64
	unop  goto 65


state 125
	struct_assigns : struct_assigns COMMA . struct_assign  (45)

	IDENT  shift 117
	.  error

	struct_assign  goto 129


state 126
	struct_init : LBRACE struct_assigns RBRACE .  (44)

	.  reduce 44


state 127
	stmt : IF expr THEN stmts ELSE stmts . FI  (30)

	FI  shift 130
	.  error


state 128
	struct_assign : IDENT EQ rvalue .  (47)

	.  reduce 47


state 129
	struct_assigns : struct_assigns COMMA struct_assign .  (45)

	.  reduce 45


state 130
	stmt : IF expr THEN stmts ELSE stmts FI .  (30)

	.  reduce 30


48 terminals, 32 nonterminals
72 grammar rules, 131 states
